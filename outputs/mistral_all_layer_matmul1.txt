0.0
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
86.938
5.623109817504883
time_i 33.4770466208458
1e-08
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-08)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
86.958
5.625385284423828
time_i 32.7326378941536
1e-07
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-07)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
86.979
5.6247453689575195
time_i 33.06517272392909
1e-06
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-06)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
87.39
5.626143932342529
time_i 61.49204341173172
1e-05
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=1e-05)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
87.082
5.631059169769287
time_i 34.72522578239441
0.0001
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.0001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
87.143
5.683064937591553
time_i 34.10726407368978
0.001
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.001)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
86.486
6.547278881072998
time_i 33.62983074188232
0.01
loading model
smoothing
tokenizer
loading dataset lambada
loading dataset wikitext
quantizing...
layers.0.self_attn
layers.1.self_attn
layers.2.self_attn
layers.3.self_attn
layers.4.self_attn
layers.5.self_attn
layers.6.self_attn
layers.7.self_attn
layers.8.self_attn
layers.9.self_attn
layers.10.self_attn
layers.11.self_attn
layers.12.self_attn
layers.13.self_attn
layers.14.self_attn
layers.15.self_attn
layers.16.self_attn
layers.17.self_attn
layers.18.self_attn
layers.19.self_attn
layers.20.self_attn
layers.21.self_attn
layers.22.self_attn
layers.23.self_attn
layers.24.self_attn
layers.25.self_attn
layers.26.self_attn
layers.27.self_attn
layers.28.self_attn
layers.29.self_attn
layers.30.self_attn
layers.31.self_attn
noisy_model_quantized
MistralForCausalLM(
  (model): MistralModel(
    (embed_tokens): Embedding(32000, 4096)
    (layers): ModuleList(
      (0): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (1): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (2): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (3): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (4): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (5): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (6): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (7): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (8): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (9): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (10): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (11): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (12): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (13): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (14): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (15): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (16): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (17): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (18): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (19): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (20): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (21): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (22): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (23): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (24): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (25): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (26): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (27): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (28): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (29): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (30): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
      (31): MistralDecoderLayer(
        (self_attn): MistralAttention(
          (q_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (k_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (v_proj): W8A8Linear(4096, 1024, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (o_proj): W8A8Linear(4096, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=None)
          (rotary_emb): MistralRotaryEmbedding()
          (matmul1): NoisyW8A8MatMul(act_quant=per_token, output_quant=None, err_prob=0.01)
          (matmul2): W8A8MatMul(act_quant=per_token, output_quant=per_token)
        )
        (mlp): MistralMLP(
          (gate_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (up_proj): W8A8Linear(4096, 14336, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (down_proj): W8A8Linear(14336, 4096, bias=False, weight_quant=per_channel, act_quant=per_token, output_quant=per_token)
          (act_fn): SiLU()
        )
        (input_layernorm): MistralRMSNorm()
        (post_attention_layernorm): MistralRMSNorm()
      )
    )
    (norm): MistralRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
evaluating
79.544
208.14112854003906
time_i 33.30389900604884
acc_noisy_list [86.938, 86.958, 86.979, 87.39, 87.082, 87.143, 86.486, 79.544]
86.938
86.958
86.979
87.39
87.082
87.143
86.486
79.544
ppl_noisy_list [5.623109817504883, 5.625385284423828, 5.6247453689575195, 5.626143932342529, 5.631059169769287, 5.683064937591553, 6.547278881072998, 208.14112854003906]
5.623109817504883
5.625385284423828
5.6247453689575195
5.626143932342529
5.631059169769287
5.683064937591553
6.547278881072998
208.14112854003906
x_sum_list []
time_sum, 296.5613976160685
